"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createSoaClient=createSoaClient,exports.createSoaServer=createSoaServer;const http_config_1=require("../../http-config"),http_helpers_1=require("../../http-helpers");function createSoaClient(e){const{serviceUrl:r,namespace:t="",timeout:o=3e4,headers:s={},axiosInstance:a,withAuth:n=!1}=e,c=a||http_config_1.httpInstance,i=t?`${r}/${t}`.replace(/\/+$/,""):r.replace(/\/+$/,"");return{async callService(e,r,t,a={}){const l=`${i}/${e}/${r}`,h=(0,http_helpers_1.prepareHeaders)({...s,...a.headers||{}},n||a.withAuth||!1);try{return(await c.post(l,t,{headers:h,timeout:a.timeout||o})).data}catch(t){throw console.error(`Error calling service ${e}.${r}:`,t),t}},async callBatch(e,r={}){const t=`${i}/batch`,a=(0,http_helpers_1.prepareHeaders)({...s,...r.headers||{}},n||r.withAuth||!1);try{return(await c.post(t,{calls:e},{headers:a,timeout:r.timeout||o})).data.results}catch(e){throw console.error("Error calling batch service:",e),e}},async getServiceDefinition(e){const r=`${i}/${e}/__definition`,t=(0,http_helpers_1.prepareHeaders)(s,n);try{return(await c.get(r,{headers:t,timeout:o})).data}catch(r){throw console.error(`Error getting service definition for ${e}:`,r),r}},close(){}}}function createSoaServer(e){const{port:r=3e3,services:t={},path:o="/services",cors:s=!0}=e;let a=null,n={...t},c=!1;return{async start(){if(c)console.warn("SOA Server is already running");else try{console.log(`Starting SOA server on port ${r}...`),a={close:e=>{console.log("Closing SOA server..."),e()}},c=!0,console.log(`SOA server running on port ${r}`)}catch(e){throw console.error("Failed to start SOA server:",e),e}},async stop(){if(c&&a)return new Promise((e=>{a.close((()=>{c=!1,a=null,console.log("SOA server stopped"),e()}))}));console.warn("SOA Server is not running")},getRegisteredServices:()=>Object.keys(n),addService(e,r){n[e]&&console.warn(`Service ${e} already exists and will be overwritten`),n[e]=r},removeService:e=>!!n[e]&&(delete n[e],!0)}}