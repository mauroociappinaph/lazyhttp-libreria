"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.configureProxy=exports.stream=exports.getCurrentMetrics=exports.trackActivity=exports.configureMetrics=exports.invalidateCacheByTags=exports.invalidateCache=exports.configureCaching=exports.initialize=exports.getAccessToken=exports.getAuthenticatedUser=exports.isAuthenticated=exports.logout=exports.login=exports.configureAuth=exports.del=exports.patch=exports.put=exports.post=exports.getById=exports.getAll=exports.get=exports.request=exports.http=void 0;const tslib_1=require("tslib");tslib_1.__exportStar(require("./core"),exports);class BrowserHttpClient{async request(t,e,r,s){return{data:{},status:200,headers:{}}}async get(t,e){return this.request("GET",t,null,e)}async getAll(t,e){return this.request("GET",t,null,e)}async getById(t,e,r){return this.request("GET",`${t}/${e}`,null,r)}async post(t,e,r){return this.request("POST",t,e,r)}async put(t,e,r){return this.request("PUT",t,e,r)}async patch(t,e,r){return this.request("PATCH",t,e,r)}async delete(t,e){return this.request("DELETE",t,null,e)}configureAuth(t){}async login(t){return{user:null,token:""}}async logout(){}isAuthenticated(){return!1}getAuthenticatedUser(){return null}getAccessToken(){return null}initialize(t){}configureCaching(t){}invalidateCache(t){}invalidateCacheByTags(t){}configureMetrics(t){}trackActivity(t){}getCurrentMetrics(){return{}}streamBasic(t,e){return fetch(t).then((t=>{var r;const s=null===(r=t.body)||void 0===r?void 0:r.getReader();if(!s)throw new Error("Streaming not supported");return new ReadableStream({start:t=>function r(){return s.read().then((({done:s,value:o})=>s?(t.close(),void((null==e?void 0:e.onComplete)&&e.onComplete())):((null==e?void 0:e.onData)&&e.onData(o),t.enqueue(o),r()))).catch((r=>{(null==e?void 0:e.onError)&&e.onError(r),t.error(r)}))}()})}))}}exports.http=new BrowserHttpClient,exports.request=exports.http.request.bind(exports.http),exports.get=exports.http.get.bind(exports.http),exports.getAll=exports.http.getAll.bind(exports.http),exports.getById=exports.http.getById.bind(exports.http),exports.post=exports.http.post.bind(exports.http),exports.put=exports.http.put.bind(exports.http),exports.patch=exports.http.patch.bind(exports.http),exports.del=exports.http.delete.bind(exports.http),exports.configureAuth=exports.http.configureAuth.bind(exports.http),exports.login=exports.http.login.bind(exports.http),exports.logout=exports.http.logout.bind(exports.http),exports.isAuthenticated=exports.http.isAuthenticated.bind(exports.http),exports.getAuthenticatedUser=exports.http.getAuthenticatedUser.bind(exports.http),exports.getAccessToken=exports.http.getAccessToken.bind(exports.http),exports.initialize=exports.http.initialize.bind(exports.http),exports.configureCaching=exports.http.configureCaching.bind(exports.http),exports.invalidateCache=exports.http.invalidateCache.bind(exports.http),exports.invalidateCacheByTags=exports.http.invalidateCacheByTags.bind(exports.http),exports.configureMetrics=exports.http.configureMetrics.bind(exports.http),exports.trackActivity=exports.http.trackActivity.bind(exports.http),exports.getCurrentMetrics=exports.http.getCurrentMetrics.bind(exports.http),exports.stream=exports.http.streamBasic.bind(exports.http);const configureProxy=t=>(console.warn("Proxy configuration is not supported in browser environments"),!1);exports.configureProxy=configureProxy,tslib_1.__exportStar(require("../common/types"),exports);