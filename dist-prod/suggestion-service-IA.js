"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.suggestionService=exports.SuggestionService=void 0;class SuggestionService{constructor(e){this.serviceUrl="http://localhost:8000",this.enabled=!1,e&&(this.serviceUrl=e)}async enable(){try{return!!(await fetch(`${this.serviceUrl}/suggest`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({error_type:"HttpUnknownError",status_code:0})})).ok&&(this.enabled=!0,!0)}catch(e){return console.warn("Suggestion service not available"),!1}}async getSuggestion(e,t){if(!this.enabled)return e.suggestion||"Verifica tu conexión a internet";try{const s={error_type:e.name||"HttpUnknownError",status_code:e.status||0,message:e.message,method:null==t?void 0:t.method,url_pattern:null==t?void 0:t.url},r=await fetch(`${this.serviceUrl}/suggest`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)});if(r.ok){return(await r.json()).suggestion}}catch(e){}return e.suggestion||"Verifica tu conexión a internet"}async provideFeedback(e,t,s,r){if(this.enabled)try{const n={error_type:e.name||"HttpUnknownError",status_code:e.status||0,url_pattern:null==t?void 0:t.url,method:null==t?void 0:t.method,message:e.message,suggestion:s,was_helpful:r};await fetch(`${this.serviceUrl}/feedback`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)})}catch(e){}}}exports.SuggestionService=SuggestionService,exports.suggestionService=new SuggestionService;