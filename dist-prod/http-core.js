"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HttpCore=void 0;const http_helpers_1=require("./http-helpers"),http_cache_1=require("./http-cache"),http_cache_strategies_1=require("./http-cache-strategies"),http_metrics_index_1=require("./metrics/http-metrics-index"),DEFAULT_TIMEOUT=1e4,DEFAULT_RETRIES=0;class HttpCore{constructor(){this._defaultTimeout=DEFAULT_TIMEOUT,this._defaultRetries=DEFAULT_RETRIES,this._defaultHeaders={}}async request(e,t={}){const{method:r="GET",headers:a={},body:s,withAuth:h=!1,timeout:i=DEFAULT_TIMEOUT,retries:c=DEFAULT_RETRIES,cache:_}=t;try{if(http_metrics_index_1.metricsManager.trackRequest(e),http_cache_1.cacheManager.shouldUseCache(r,t)){const _=http_cache_1.cacheManager.generateCacheKey(e,t);return await(0,http_cache_strategies_1.executeWithCacheStrategy)(_,(async()=>{const t=(0,http_helpers_1.prepareHeaders)(a,h),_=await http_helpers_1.retryHandler.executeWithRetry(this._baseUrl?`${this._baseUrl}${e}`:e,r,t,s,i||this._defaultTimeout||DEFAULT_TIMEOUT,void 0!==c?c:void 0!==this._defaultRetries?this._defaultRetries:DEFAULT_RETRIES);return"GET"!==r&&http_cache_1.cacheManager.invalidateByMethod(r,e),_}),t)}const _=(0,http_helpers_1.prepareHeaders)(a,h),d=await http_helpers_1.retryHandler.executeWithRetry(this._baseUrl?`${this._baseUrl}${e}`:e,r,_,s,i||this._defaultTimeout||DEFAULT_TIMEOUT,void 0!==c?c:void 0!==this._defaultRetries?this._defaultRetries:DEFAULT_RETRIES);return"GET"!==r&&http_cache_1.cacheManager.invalidateByMethod(r,e),d}catch(e){return http_helpers_1.errorHandler.handleError(e)}}async get(e,t){return this.request(e,{...t,method:"GET"})}async getAll(e,t){var r,a;const s=(null===(r=null==t?void 0:t.params)||void 0===r?void 0:r.page)||1,h=(null===(a=null==t?void 0:t.params)||void 0===a?void 0:a.limit)||100,i=await this.request(e,{...t,method:"GET",params:{...null==t?void 0:t.params,page:s,limit:h}});return i.data&&Array.isArray(i.data)&&(i.meta={currentPage:s,totalItems:i.data.length}),i}async getById(e,t,r){return this.request(e,{...r,method:"GET",params:{id:t}})}async post(e,t,r){return this.request(e,{...r,method:"POST",body:t})}async put(e,t,r){return this.request(e,{...r,method:"PUT",body:t})}async patch(e,t,r){return this.request(e,{...r,method:"PATCH",body:t})}async delete(e,t){return this.request(e,{...t,method:"DELETE"})}}exports.HttpCore=HttpCore;