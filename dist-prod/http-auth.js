"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.currentAuthConfig=exports.authState=exports.DEFAULT_AUTH_CONFIG=void 0,exports.configureAuth=configureAuth,exports.login=login,exports.logout=logout,exports.isAuthenticated=isAuthenticated,exports.getAuthenticatedUser=getAuthenticatedUser,exports.getAccessToken=getAccessToken,exports.refreshToken=refreshToken,exports.handleRefreshTokenFailure=handleRefreshTokenFailure,exports.decodeToken=decodeToken,exports.isTokenExpired=isTokenExpired,exports.storeToken=storeToken,exports.getToken=getToken,exports.removeToken=removeToken;const tslib_1=require("tslib"),http_config_1=require("./http-config"),axios_1=tslib_1.__importDefault(require("axios")),cookie_manager_1=require("./cookie-manager");function configureAuth(e){exports.currentAuthConfig={...exports.currentAuthConfig,...e};const t=getToken(exports.currentAuthConfig.tokenKey);if(t){const e=decodeToken(t),o=(null==e?void 0:e.exp)?1e3*e.exp:void 0;if(!o||o>Date.now()){const e=getToken(exports.currentAuthConfig.refreshTokenKey||"");exports.authState={accessToken:t,refreshToken:e||void 0,expiresAt:o,isAuthenticated:!0}}else removeToken(exports.currentAuthConfig.tokenKey),exports.currentAuthConfig.refreshTokenKey&&removeToken(exports.currentAuthConfig.refreshTokenKey)}}async function login(e){try{const t=await fetch(`${exports.currentAuthConfig.baseURL}${exports.currentAuthConfig.loginEndpoint}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error("Login failed");const o=await t.json();return storeToken(o.token,o.refreshToken),exports.currentAuthConfig.onLogin&&exports.currentAuthConfig.onLogin(o),o}catch(e){throw exports.currentAuthConfig.onError&&exports.currentAuthConfig.onError(e),e}}async function logout(){try{const e=getToken(exports.currentAuthConfig.tokenKey);e&&await fetch(`${exports.currentAuthConfig.baseURL}${exports.currentAuthConfig.logoutEndpoint}`,{method:"POST",headers:{Authorization:`Bearer ${e}`}})}catch(e){exports.currentAuthConfig.onError&&exports.currentAuthConfig.onError(e)}finally{removeToken(exports.currentAuthConfig.tokenKey),exports.currentAuthConfig.onLogout&&exports.currentAuthConfig.onLogout()}}function isAuthenticated(){return!!getToken(exports.currentAuthConfig.tokenKey)}async function getAuthenticatedUser(){if(!isAuthenticated())return null;if(exports.authState.user)return exports.authState.user;if(exports.currentAuthConfig.userInfoEndpoint)try{const e=await axios_1.default.get(`${http_config_1.API_URL}${exports.currentAuthConfig.userInfoEndpoint}`,{headers:{Authorization:`Bearer ${exports.authState.accessToken}`}});return exports.authState.user=e.data,exports.authState.user}catch(e){return console.warn("No se pudo cargar la informaci贸n del usuario"),null}return null}function getAccessToken(){return isAuthenticated()?exports.authState.accessToken:null}async function refreshToken(){if(!exports.currentAuthConfig.refreshEndpoint||!exports.authState.refreshToken)throw new Error("No hay configuraci贸n para refrescar token");try{const e=`${http_config_1.API_URL}${exports.currentAuthConfig.refreshEndpoint}`,t=await axios_1.default.post(e,{refresh_token:exports.authState.refreshToken});if(!t.data.access_token)throw new Error("No se recibi贸 un token de acceso");const{access_token:o,refresh_token:r,expires_in:n}=t.data,s=n?Date.now()+1e3*n:void 0;return storeToken(exports.currentAuthConfig.tokenKey,o),r&&exports.currentAuthConfig.refreshTokenKey&&storeToken(exports.currentAuthConfig.refreshTokenKey,r),exports.authState={...exports.authState,accessToken:o,refreshToken:r||exports.authState.refreshToken,expiresAt:s,isAuthenticated:!0},o}catch(e){throw exports.currentAuthConfig.onError&&exports.currentAuthConfig.onError(e),e}}async function handleRefreshTokenFailure(){removeToken(exports.currentAuthConfig.tokenKey),exports.currentAuthConfig.refreshTokenKey&&removeToken(exports.currentAuthConfig.refreshTokenKey),exports.authState={accessToken:"",isAuthenticated:!1},exports.currentAuthConfig.onError&&exports.currentAuthConfig.onError(new Error("Fall贸 el refresco del token"))}function decodeToken(e){try{const t=e.split(".");if(3!==t.length)return null;const o=t[1];return JSON.parse(atob(o))}catch(e){return console.warn("Error al decodificar token",e),null}}function isTokenExpired(e){if("number"==typeof e)return e<Date.now();const t=decodeToken(e);if(!t||!t.exp)return!1;return 1e3*t.exp<Date.now()}function storeToken(e,t){const o={...exports.currentAuthConfig.cookieOptions,path:"/"};switch(exports.currentAuthConfig.storage){case"cookie":cookie_manager_1.CookieManager.set(e,t,o);break;case"localStorage":localStorage.setItem(e,t);break;case"sessionStorage":sessionStorage.setItem(e,t)}}function getToken(e){switch(exports.currentAuthConfig.storage){case"cookie":return cookie_manager_1.CookieManager.get(e);case"localStorage":return localStorage.getItem(e);case"sessionStorage":return sessionStorage.getItem(e);default:return null}}function removeToken(e){switch(exports.currentAuthConfig.storage){case"cookie":cookie_manager_1.CookieManager.remove(e,exports.currentAuthConfig.cookieOptions);break;case"localStorage":localStorage.removeItem(e);break;case"sessionStorage":sessionStorage.removeItem(e)}}exports.DEFAULT_AUTH_CONFIG={baseURL:"",loginEndpoint:"/auth/login",logoutEndpoint:"/auth/logout",userInfoEndpoint:"/auth/me",refreshEndpoint:"/auth/refresh",tokenKey:"token",refreshTokenKey:"refreshToken",storage:"localStorage"},exports.authState={accessToken:"",isAuthenticated:!1},exports.currentAuthConfig={baseURL:"",loginEndpoint:"/login",logoutEndpoint:"/logout",tokenKey:"token",refreshTokenKey:"refreshToken",storage:"localStorage"};