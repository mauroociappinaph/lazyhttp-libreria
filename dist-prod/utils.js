"use strict";function deepFindLazy(e,r,t=new Set){if(null!=e&&!t.has(e)){if(r(e))return e;if("object"==typeof e&&t.add(e),"object"!=typeof e||null===e||Array.isArray(e)){if(Array.isArray(e))for(const o of e){const e=deepFindLazy(o,r,t);if(void 0!==e)return e}}else for(const o in e)if(Object.prototype.hasOwnProperty.call(e,o)){const i=deepFindLazy(e[o],r,t);if(void 0!==i)return i}}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.deepFindLazy=deepFindLazy;